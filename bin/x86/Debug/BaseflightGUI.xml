<?xml version="1.0"?>
<doc>
<assembly>
<name>
BaseflightGUI
</name>
</assembly>
<members>
<member name="P:BaseflightGUI.My.Resources.Resources.ResourceManager">
	<summary>
  Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Culture">
	<summary>
  Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
  Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.airplane">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.bicopter">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Download_Globe_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Exit_Door_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Folder_and_Text_Document_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.fw">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gimbal">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_background">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_direction">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_left_led_green">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_left_led_red">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_right_led_green">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_right_led_red">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_sat_green">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.gps_sat_red">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.HeadingIndicator_Aircraft">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.HeadingIndicator_Background">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.HeadingWeel">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.heli_120">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.heli_90">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.hex6">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.hex6x">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Horizon_Background">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Horizon_empty_Background">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Horizon_GroundSky">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.i_green_off">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.i_green_on">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.i_red_off">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.i_red_on">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Link_Add_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Link_Remove_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Link_Search_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Maquette_Avion">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.octo8coax">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.octo8p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.octo8x">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.pitch">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.quadp">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.quadx">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.rcexpo">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Refresh_Page_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.roll">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Text_Document_Delete_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Text_Document_Down_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Text_Document_Save_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Text_Document_Up_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.toggle_off">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.toggle_on">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.tri">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.Upload_Globe_32_n_p">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.vtail">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.y4">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="P:BaseflightGUI.My.Resources.Resources.y6">
	<summary>
  Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
</summary>
</member><member name="T:BaseflightGUI.My.Resources.Resources">
	<summary>
  Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
</summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.BaseflightControl.RotateImage(System.Windows.Forms.PaintEventArgs,System.Drawing.Image,System.Double,System.Drawing.Point,System.Drawing.Point,System.Single)">
	<summary>
 Rotate an image on a point with a specified angle
 </summary>
	<param name="pe">The paint area event where the image will be displayed</param>
	<param name="img">The image to display</param>
	<param name="alpha">The angle of rotation in radian</param>
	<param name="ptImg">The location of the left upper corner of the image to display in the paint area in nominal situation</param>
	<param name="ptRot">The location of the rotation point in the paint area</param>
	<param name="scaleFactor">Multiplication factor on the display image</param>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.BaseflightControl.TranslateImage(System.Windows.Forms.PaintEventArgs,System.Drawing.Image,System.Int32,System.Single,System.Drawing.Point,System.Single)">
	<summary>
 Translate an image on line with a specified distance and a spcified angle
 </summary>
	<param name="pe">The paint area event where the image will be displayed</param>
	<param name="img">The image to display</param>
	<param name="deltaPx">The translation distance in pixel</param>
	<param name="alpha">The angle of translation direction in radian</param>
	<param name="ptImg">The location of the left upper corner of the image to display in the paint area in nominal situation</param>
	<param name="scaleFactor">Multiplication factor on the display image</param>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.BaseflightControl.RotateAndTranslate(System.Windows.Forms.PaintEventArgs,System.Drawing.Image,System.Double,System.Double,System.Drawing.Point,System.Int32,System.Drawing.Point,System.Single)">
	<summary>
 Rotate an image an apply a translation on the rotated image and the display it
 </summary>
	<param name="pe">The paint area event where the image will be displayed</param>
	<param name="img">The image to display</param>
	<param name="alphaRot">The angle of rotation in radian</param>
	<param name="alphaTrs">The angle of translation direction in radian, expressed in the rotated image coordonate system</param>
	<param name="ptImg">The location of the left upper corner of the image to display in the paint area in nominal situation</param>
	<param name="ptRot">The location of the rotation point in the paint area</param>
	<param name="deltaPx">The translation distance in pixel</param>
	<param name="scaleFactor">Multiplication factor on the display image</param>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.BaseflightControl.ScrollCounter(System.Windows.Forms.PaintEventArgs,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Point,System.Single)">
	<summary>
 Display a Scroll counter image like on gas  pumps 
 </summary>
	<param name="pe">The paint area event where the image will be displayed</param>
	<param name="imgBand">The band counter image to display with digts : 0|1|2|3|4|5|6|7|8|9|0</param>
	<param name="nbOfDigits">The number of digits displayed by the counter</param>
	<param name="counterValue">The value to dispay on the counter</param>
	<param name="ptImg">The location of the left upper corner of the image to display in the paint area in nominal situation</param>
	<param name="scaleFactor">Multiplication factor on the display image</param>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.BaseflightControl.InterpolPhyToAngle(System.Single,System.Single,System.Single,System.Single,System.Single)">
	<summary>
 Convert a physical value in an rad angle used by the rotate function
 </summary>
	<param name="phyVal">Physical value to interpol</param>
	<param name="minPhy">Minimum physical value</param>
	<param name="maxPhy">Maximum physical value</param>
	<param name="minAngle">The angle related to the minumum value, in deg</param>
	<param name="maxAngle">The angle related to the maximum value, in deg</param>
	<returns>The angle in radian witch correspond to the physical value</returns>
</member><member name="M:BaseflightGUI.IniReader.GetPrivateProfileInt(System.String,System.String,System.Int32,System.String)">
	<summary>
 The GetPrivateProfileInt function retrieves an integer associated with a key in the specified section of an initialization file.
 </summary>
	<param name="lpApplicationName">Pointer to a null-terminated string specifying the name of the section in the initialization file.</param>
	<param name="lpKeyName">Pointer to the null-terminated string specifying the name of the key whose value is to be retrieved. This value is in the form of a string; the GetPrivateProfileInt function converts the string into an integer and returns the integer.</param>
	<param name="nDefault">Specifies the default value to return if the key name cannot be found in the initialization file.</param>
	<param name="lpFileName">Pointer to a null-terminated string that specifies the name of the initialization file. If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory.</param>
	<returns>The return value is the integer equivalent of the string following the specified key name in the specified initialization file. If the key is not found, the return value is the specified default value. If the value of the key is less than zero, the return value is zero.</returns>
</member><member name="M:BaseflightGUI.IniReader.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
	<summary>
 The WritePrivateProfileString function copies a string into the specified section of an initialization file.
 </summary>
	<param name="lpApplicationName">Pointer to a null-terminated string containing the name of the section to which the string will be copied. If the section does not exist, it is created. The name of the section is case-independent; the string can be any combination of uppercase and lowercase letters.</param>
	<param name="lpKeyName">Pointer to the null-terminated string containing the name of the key to be associated with a string. If the key does not exist in the specified section, it is created. If this parameter is NULL, the entire section, including all entries within the section, is deleted.</param>
	<param name="lpString">Pointer to a null-terminated string to be written to the file. If this parameter is NULL, the key pointed to by the lpKeyName parameter is deleted.</param>
	<param name="lpFileName">Pointer to a null-terminated string that specifies the name of the initialization file.</param>
	<returns>If the function successfully copies the string to the initialization file, the return value is nonzero; if the function fails, or if it flushes the cached version of the most recently accessed initialization file, the return value is zero.</returns>
</member><member name="M:BaseflightGUI.IniReader.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
	<summary>
 The GetPrivateProfileString function retrieves a string from the specified section in an initialization file.
 </summary>
	<param name="lpApplicationName">Pointer to a null-terminated string that specifies the name of the section containing the key name. If this parameter is NULL, the GetPrivateProfileString function copies all section names in the file to the supplied buffer.</param>
	<param name="lpKeyName">Pointer to the null-terminated string specifying the name of the key whose associated string is to be retrieved. If this parameter is NULL, all key names in the section specified by the lpAppName parameter are copied to the buffer specified by the lpReturnedString parameter.</param>
	<param name="lpDefault">Pointer to a null-terminated default string. If the lpKeyName key cannot be found in the initialization file, GetPrivateProfileString copies the default string to the lpReturnedString buffer. This parameter cannot be NULL. <br>Avoid specifying a default string with trailing blank characters. The function inserts a null character in the lpReturnedString buffer to strip any trailing blanks.</br></param>
	<param name="lpReturnedString">Pointer to the buffer that receives the retrieved string.</param>
	<param name="nSize">Specifies the size, in TCHARs, of the buffer pointed to by the lpReturnedString parameter.</param>
	<param name="lpFileName">Pointer to a null-terminated string that specifies the name of the initialization file. If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory.</param>
	<returns>The return value is the number of characters copied to the buffer, not including the terminating null character.</returns>
</member><member name="M:BaseflightGUI.IniReader.GetPrivateProfileSectionNames(System.Byte[],System.Int32,System.String)">
	<summary>
 The GetPrivateProfileSectionNames function retrieves the names of all sections in an initialization file.
 </summary>
	<param name="lpszReturnBuffer">Pointer to a buffer that receives the section names associated with the named file. The buffer is filled with one or more null-terminated strings; the last string is followed by a second null character.</param>
	<param name="nSize">Specifies the size, in TCHARs, of the buffer pointed to by the lpszReturnBuffer parameter.</param>
	<param name="lpFileName">Pointer to a null-terminated string that specifies the name of the initialization file. If this parameter is NULL, the function searches the Win.ini file. If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory.</param>
	<returns>The return value specifies the number of characters copied to the specified buffer, not including the terminating null character. If the buffer is not large enough to contain all the section names associated with the specified initialization file, the return value is equal to the length specified by nSize minus two.</returns>
</member><member name="M:BaseflightGUI.IniReader.WritePrivateProfileSection(System.String,System.String,System.String)">
	<summary>
 The WritePrivateProfileSection function replaces the keys and values for the specified section in an initialization file.
 </summary>
	<param name="lpAppName">Pointer to a null-terminated string specifying the name of the section in which data is written. This section name is typically the name of the calling application.</param>
	<param name="lpString">Pointer to a buffer containing the new key names and associated values that are to be written to the named section.</param>
	<param name="lpFileName">Pointer to a null-terminated string containing the name of the initialization file. If this parameter does not contain a full path for the file, the function searches the Windows directory for the file. If the file does not exist and lpFileName does not contain a full path, the function creates the file in the Windows directory. The function does not create a file if lpFileName contains the full path and file name of a file that does not exist.</param>
	<returns>If the function succeeds, the return value is nonzero.<br>If the function fails, the return value is zero.</br></returns>
</member><member name="M:BaseflightGUI.IniReader.#ctor(System.String)">
	<summary>Constructs a new IniReader instance.</summary>
	<param name="file">Specifies the full path to the INI file (the file doesn't have to exist).</param>
</member><member name="P:BaseflightGUI.IniReader.Filename">
	<summary>Gets or sets the full path to the INI file.</summary>
	<value>A String representing the full path to the INI file.</value>
</member><member name="P:BaseflightGUI.IniReader.Section">
	<summary>Gets or sets the section you're working in. (aka 'the active section')</summary>
	<value>A String representing the section you're working in.</value>
</member><member name="M:BaseflightGUI.IniReader.ReadInteger(System.String,System.String,System.Int32)">
	<summary>Reads an Integer from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<param name="defVal">The value to return if the specified key isn't found.</param>
	<returns>Returns the value of the specified section/key pair, or returns the default value if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadInteger(System.String,System.String)">
	<summary>Reads an Integer from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified section/key pair, or returns 0 if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadInteger(System.String,System.Int32)">
	<summary>Reads an Integer from the specified key of the active section.</summary>
	<param name="key">The key from which to return the value.</param>
	<param name="defVal">The section to search in.</param>
	<returns>Returns the value of the specified Key, or returns the default value if the specified Key isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadInteger(System.String)">
	<summary>Reads an Integer from the specified key of the active section.</summary>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified key, or returns 0 if the specified key isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadString(System.String,System.String,System.String)">
	<summary>Reads a String from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<param name="defVal">The value to return if the specified key isn't found.</param>
	<returns>Returns the value of the specified section/key pair, or returns the default value if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadString(System.String,System.String)">
	<summary>Reads a String from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified section/key pair, or returns an empty String if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadString(System.String)">
	<summary>Reads a String from the specified key of the active section.</summary>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified key, or returns an empty String if the specified key isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadLong(System.String,System.String,System.Int64)">
	<summary>Reads a Long from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<param name="defVal">The value to return if the specified key isn't found.</param>
	<returns>Returns the value of the specified section/key pair, or returns the default value if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadLong(System.String,System.String)">
	<summary>Reads a Long from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified section/key pair, or returns 0 if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadLong(System.String,System.Int64)">
	<summary>Reads a Long from the specified key of the active section.</summary>
	<param name="key">The key from which to return the value.</param>
	<param name="defVal">The section to search in.</param>
	<returns>Returns the value of the specified key, or returns the default value if the specified key isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadLong(System.String)">
	<summary>Reads a Long from the specified key of the active section.</summary>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified Key, or returns 0 if the specified Key isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadByteArray(System.String,System.String)">
	<summary>Reads a Byte array from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified section/key pair, or returns null (Nothing in VB.NET) if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadByteArray(System.String)">
	<summary>Reads a Byte array from the specified key of the active section.</summary>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified key, or returns null (Nothing in VB.NET) if the specified key pair isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadBoolean(System.String,System.String,System.Boolean)">
	<summary>Reads a Boolean from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<param name="defVal">The value to return if the specified key isn't found.</param>
	<returns>Returns the value of the specified section/key pair, or returns the default value if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadBoolean(System.String,System.String)">
	<summary>Reads a Boolean from the specified key of the specified section.</summary>
	<param name="section">The section to search in.</param>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified section/key pair, or returns false if the specified section/key pair isn't found in the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadBoolean(System.String,System.Boolean)">
	<summary>Reads a Boolean from the specified key of the specified section.</summary>
	<param name="key">The key from which to return the value.</param>
	<param name="defVal">The value to return if the specified key isn't found.</param>
	<returns>Returns the value of the specified key pair, or returns the default value if the specified key isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.ReadBoolean(System.String)">
	<summary>Reads a Boolean from the specified key of the specified section.</summary>
	<param name="key">The key from which to return the value.</param>
	<returns>Returns the value of the specified key, or returns false if the specified key isn't found in the active section of the INI file.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.String,System.Int32)">
	<summary>Writes an Integer to the specified key in the specified section.</summary>
	<param name="section">The section to write in.</param>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.Int32)">
	<summary>Writes an Integer to the specified key in the active section.</summary>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.String,System.String)">
	<summary>Writes a String to the specified key in the specified section.</summary>
	<param name="section">Specifies the section to write in.</param>
	<param name="key">Specifies the key to write to.</param>
	<param name="value">Specifies the value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.String)">
	<summary>Writes a String to the specified key in the active section.</summary>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.String,System.Int64)">
	<summary>Writes a Long to the specified key in the specified section.</summary>
	<param name="section">The section to write in.</param>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.Int64)">
	<summary>Writes a Long to the specified key in the active section.</summary>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.String,System.Byte[])">
	<summary>Writes a Byte array to the specified key in the specified section.</summary>
	<param name="section">The section to write in.</param>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.Byte[])">
	<summary>Writes a Byte array to the specified key in the active section.</summary>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.String,System.Byte[],System.Int32,System.Int32)">
	<summary>Writes a Byte array to the specified key in the specified section.</summary>
	<param name="section">The section to write in.</param>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<param name="offset">An offset in <i>value</i>.</param>
	<param name="length">The number of elements of <i>value</i> to convert.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.String,System.Boolean)">
	<summary>Writes a Boolean to the specified key in the specified section.</summary>
	<param name="section">The section to write in.</param>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.Write(System.String,System.Boolean)">
	<summary>Writes a Boolean to the specified key in the active section.</summary>
	<param name="key">The key to write to.</param>
	<param name="value">The value to write.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.DeleteKey(System.String,System.String)">
	<summary>Deletes a key from the specified section.</summary>
	<param name="section">The section to delete from.</param>
	<param name="key">The key to delete.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.DeleteKey(System.String)">
	<summary>Deletes a key from the active section.</summary>
	<param name="key">The key to delete.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.DeleteSection(System.String)">
	<summary>Deletes a section from an INI file.</summary>
	<param name="section">The section to delete.</param>
	<returns>Returns true if the function succeeds, false otherwise.</returns>
</member><member name="M:BaseflightGUI.IniReader.GetSectionNames">
	<summary>Retrieves a list of all available sections in the INI file.</summary>
	<returns>Returns an ArrayList with all available sections.</returns>
</member><member name="F:BaseflightGUI.IniReader.m_Filename">
	<summary>
 Holds the full path to the INI file.
 </summary>
</member><member name="F:BaseflightGUI.IniReader.m_Section">
	<summary>
 Holds the active section name
 </summary>
</member><member name="F:BaseflightGUI.IniReader.MAX_ENTRY">
	<summary>
 The maximum number of bytes in a section buffer.
 </summary>
</member><member name="T:BaseflightGUI.IniReader">
	<summary>
 The INIReader class can read keys from and write keys to an INI file.
 </summary>
	<remarks>
 This class uses several Win32 API functions to read from and write to INI files. It will not work on Linux or FreeBSD.
 </remarks>
</member><member name="F:BaseflightGUI.BaseflightGUIControls.heading_indicator.components">
	<summary>
 Required designer variable.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.heading_indicator.InitializeComponent">
	<summary>
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.heading_indicator.SetHeadingIndicatorParameters(System.Int32)">
	<summary>
 Define the physical value to be displayed on the indicator
 </summary>
	<param name="aircraftHeading">The aircraft heading in °deg</param>
</member><member name="F:BaseflightGUI.BaseflightGUIControls.BaseglightMotors.components">
	<summary>
 Required designer variable.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.BaseglightMotors.InitializeComponent">
	<summary>
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.BaseglightMotors.SetMotorsIndicatorParameters(System.Int32[],System.Int32[],System.Int32)">
	<summary>
	</summary>
	<param name="motor_values"></param>
	<param name="servo_values"></param>
	<param name="MultiType"></param>
	<remarks></remarks>
</member><member name="F:BaseflightGUI.BaseflightGUIControls.throttle_expo_control.components">
	<summary>
 Required designer variable.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.throttle_expo_control.InitializeComponent">
	<summary>
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.throttle_expo_control.SetRCExpoParameters(System.Double,System.Double,System.Int32)">
	<summary>
 Define the values to be displayed on the indicator
</summary>
</member><member name="F:BaseflightGUI.BaseflightGUIControls.GpsIndicatorInstrumentControl.components">
	<summary>
 Required designer variable.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.GpsIndicatorInstrumentControl.InitializeComponent">
	<summary>
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.GpsIndicatorInstrumentControl.SetGPSIndicatorParameters(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Define the physical value to be displayed on the indicator
 </summary>
</member><member name="F:BaseflightGUI.BaseflightGUIControls.artifical_horizon.components">
	<summary>
 Required designer variable.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.artifical_horizon.InitializeComponent">
	<summary>
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.artifical_horizon.SetArtificalHorizon(System.Double,System.Double)">
	<summary>
 Define the physical value to be displayed on the indicator
 </summary>
	<param name="aircraftPitchAngle">The aircraft pitch angle in °deg</param>
	<param name="aircraftRollAngle">The aircraft roll angle in °deg</param>
</member><member name="F:BaseflightGUI.BaseflightGUIControls.rc_expo_control.components">
	<summary>
 Required designer variable.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.rc_expo_control.InitializeComponent">
	<summary>
 Required method for Designer support - do not modify 
 the contents of this method with the code editor.
 </summary>
</member><member name="M:BaseflightGUI.BaseflightGUIControls.rc_expo_control.SetRCExpoParameters(System.Double,System.Double)">
	<summary>
 Define the values to be displayed on the indicator
</summary>
</member>
</members>
</doc>